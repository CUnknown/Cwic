- content_for :page_title do
  = index_title(Feedback)
- content_for :mini_search do
  = render 'layouts/mini_search', current_search_type: Feedback.model_name
- if @feedbacks.empty? && params[:mini_search].present?
  p
    = t('empty_for_search', classes: Feedback.model_name.human(count: 2).lcfirst, search: sanitize(params[:mini_search], :tags=>[])).html_safe
    = link_to(t('remove_search'), feedbacks_path())
- elsif @feedbacks.empty?
  p
    = t('.empty', default: :empty_objects, classes: Feedback.model_name.human(count: 2).lcfirst)
- else
  = paginate @feedbacks
  table
    thead
      tr
        = table_head(Feedback, :screen_capture)
        = table_head(Feedback, :user)
        = table_head(Feedback, :organisation)
        = table_head(Feedback, :message)
        = table_head(Feedback, :specs)
        th
    tbody
      - @feedbacks.each do |feedback|
        tr
          td
            = name_link_to_show(feedback, { name: image_tag(feedback.screen_capture.icon.url) })
          td
            = name_link_to_show(feedback.user) if feedback.user.present?
          td
            = name_link_to_show(feedback.organisation) if feedback.organisation.present?
          td.feedback_message
            p
              = feedback.message
          td.feedback_specs
            p
              = feedback.specs
          td.icons
            = icon_link_to_destroy(feedback)
  = paginate @feedbacks
