.table-container
  = paginate reservations, prefix: local_assigns[:prefix] if reservations.respond_to?(:current_page)
  = limiting prefix: local_assigns[:prefix]
  = form_tag multiple_organisation_reservations_path(@organisation) do
    table.multiple-edit
      thead
        tr
          th = check_box_tag 'select_all_reservations', '', false, class: 'select-all-checkbox'
          th
          = sortable_table_head(Reservation, [:status, :index], prefix: local_assigns[:prefix])
          = sortable_table_head(Reservation, :id, prefix: local_assigns[:prefix])
          = sortable_table_head(Reservation, :description, prefix: local_assigns[:prefix])
          = sortable_table_head(Reservation, [:organisation_client, :first_name], prefix: local_assigns[:prefix])
          = sortable_table_head(Reservation, [:entity, :name], prefix: local_assigns[:prefix])
          = sortable_table_head(Reservation, :begins_at, prefix: local_assigns[:prefix])
          = sortable_table_head(Reservation, :ends_at, prefix: local_assigns[:prefix])
          th

      tbody
        - reservations.each do |reservation|
          tr class=('highlight' if local_assigns[:highlight].try(:include?, reservation)) class=(['past', 'now', 'future'].detect { |m| reservation.send("#{m}?") })
            td = check_box_tag "reservation_ids[]", reservation.id, false, class: 'select-all-child', id: "reservation_ids_#{reservation.id}"
            td = (content_tag(:i, '', class: 'icon-warning-sign table-warning-icon') if reservation.warning)
            - if reservation.status.present?
              td style="opacity: 0.7; background-color:#{reservation.status.color}; color: #{Cwic::Color.text_color(reservation.status.color)};"
                = reservation.status.name
            - else
              td
            td = name_link_to_show([@organisation, reservation])
            td = reservation.description
            td = name_link_to_show([@organisation, reservation.organisation_client])
            td = name_link_to_show([@organisation, reservation.entity])
            td = l(reservation.begins_at, format: :long)
            td = l(reservation.ends_at, format: :long)
            td.icons
              = icon_link_to_edit([@organisation, reservation])
              = icon_link_to_destroy([@organisation, reservation])

    .multiple-edit-controls
      span.multiple-edit
        = t('multiple.with_selected')
      = submit_tag t('multiple.edit'), name: 'edit'
      = submit_tag t('multiple.delete'), name: 'delete'

= paginate reservations, prefix: local_assigns[:prefix] if reservations.respond_to?(:current_page)
